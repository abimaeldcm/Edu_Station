// <auto-generated />
using System;
using Edu_Station.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Edu_Station.Migrations
{
    [DbContext(typeof(BancoContext))]
    partial class BancoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.Property<Guid>("AlunosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscipinasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlunosId", "DiscipinasId");

                    b.HasIndex("DiscipinasId");

                    b.ToTable("AlunoDisciplina");
                });

            modelBuilder.Entity("DocenteTurma", b =>
                {
                    b.Property<Guid>("DocentesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DocentesId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("DocenteTurma");
                });

            modelBuilder.Entity("Edu_Station.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("IdTurma");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f12bc8d1-4e2b-4b7d-af42-b858bb362cf9"),
                            CPF = "09876543210",
                            DataNascimento = new DateTime(2005, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernandolima@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Fernando Lima",
                            Senha = "123",
                            Telefone = "86996655443"
                        });
                });

            modelBuilder.Entity("Edu_Station.Models.Diretor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diretores");
                });

            modelBuilder.Entity("Edu_Station.Models.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDocente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("IdDocente");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Edu_Station.Models.Docente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("Edu_Station.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            Ano = "2024",
                            DataCriacao = new DateTime(2024, 4, 9, 1, 45, 29, 312, DateTimeKind.Local).AddTicks(2753),
                            Nome = "1A"
                        });
                });

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.HasOne("Edu_Station.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu_Station.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DiscipinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocenteTurma", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu_Station.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Edu_Station.Models.Aluno", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany("Alunos")
                        .HasForeignKey("DocenteId");

                    b.HasOne("Edu_Station.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Edu_Station.Models.Disciplina", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany("Disciplinas")
                        .HasForeignKey("DocenteId");

                    b.HasOne("Edu_Station.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("IdDocente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Edu_Station.Models.Docente", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("Edu_Station.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}

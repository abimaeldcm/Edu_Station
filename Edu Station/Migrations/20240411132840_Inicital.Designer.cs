// <auto-generated />
using System;
using Edu_Station.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Edu_Station.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20240411132840_Inicital")]
    partial class Inicital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.Property<Guid>("AlunosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscipinasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlunosId", "DiscipinasId");

                    b.HasIndex("DiscipinasId");

                    b.ToTable("AlunoDisciplina");
                });

            modelBuilder.Entity("DocenteTurma", b =>
                {
                    b.Property<Guid>("DocentesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DocentesId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("DocenteTurma");
                });

            modelBuilder.Entity("Edu_Station.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("IdTurma");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f12bc8d1-4e2b-4b5d-af42-b858bb362cf9"),
                            CPF = "09876543210",
                            DataNascimento = new DateTime(2005, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernandolima@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Fernando Lima",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "86996655443"
                        },
                        new
                        {
                            Id = new Guid("f12bc8d1-4e2b-4b7d-af42-b858bb362cf9"),
                            CPF = "09876543210",
                            DataNascimento = new DateTime(2005, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernandolima@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Fernando Lima",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "86996655443"
                        },
                        new
                        {
                            Id = new Guid("98bc7d6e-5a1f-4c7c-bddb-93733fb6d4d1"),
                            CPF = "01234567890",
                            DataNascimento = new DateTime(2003, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariasilva@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Maria Silva",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "85997766554"
                        },
                        new
                        {
                            Id = new Guid("a2e1b68e-f2d8-4e33-9cbf-9fe5125aeff7"),
                            CPF = "12345678901",
                            DataNascimento = new DateTime(2004, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joaooliveira@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "João Oliveira",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "81998877665"
                        },
                        new
                        {
                            Id = new Guid("fb9c8a3b-4dc7-4981-b38f-9a50031e5b84"),
                            CPF = "23456789012",
                            DataNascimento = new DateTime(2003, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anasouza@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Ana Souza",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "11997766554"
                        },
                        new
                        {
                            Id = new Guid("ec1f4354-865e-47a1-8c6f-31f69360b97d"),
                            CPF = "34567890123",
                            DataNascimento = new DateTime(2004, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedrosantos@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Pedro Santos",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "21998877665"
                        },
                        new
                        {
                            Id = new Guid("6d1cb8d4-4c70-44e8-8e58-b1c378c5271b"),
                            CPF = "45678901234",
                            DataNascimento = new DateTime(2005, 9, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marianacosta@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Mariana Costa",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "31997766554"
                        },
                        new
                        {
                            Id = new Guid("314eb2b5-20ef-4ba4-853c-0b5acfaa45dc"),
                            CPF = "56789012345",
                            DataNascimento = new DateTime(2004, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlosoliveira@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Carlos Oliveira",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "11998877665"
                        },
                        new
                        {
                            Id = new Guid("54b13b24-bc53-4826-9f9e-b5b75bca12c0"),
                            CPF = "67890123456",
                            DataNascimento = new DateTime(2003, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "julianalima@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Juliana Lima",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "85998877665"
                        },
                        new
                        {
                            Id = new Guid("a2d6d6b8-6eb6-40a2-978d-ae48fd5f7f6d"),
                            CPF = "78901234567",
                            DataNascimento = new DateTime(2005, 11, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "lucasferreira@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Lucas Ferreira",
                            Perfil = 3,
                            Senha = "123",
                            Telefone = "81998877665"
                        });
                });

            modelBuilder.Entity("Edu_Station.Models.Diretor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diretores");
                });

            modelBuilder.Entity("Edu_Station.Models.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDocente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("IdDocente");

                    b.ToTable("Disciplinas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(340),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            Nome = "Português"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fb8"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(352),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fb8"),
                            Nome = "Matemática"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fb9"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(354),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fb9"),
                            Nome = "História"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fba"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(356),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fba"),
                            Nome = "Geografia"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fbb"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(359),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbb"),
                            Nome = "Ciências"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fbc"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(361),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbc"),
                            Nome = "Inglês"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fbd"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(363),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbd"),
                            Nome = "Educação Física"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fbe"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(366),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbe"),
                            Nome = "Artes"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fbf"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(368),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbf"),
                            Nome = "Química"
                        },
                        new
                        {
                            Id = new Guid("c8188f6e-ffb6-4d1f-9ad5-3f4bb5838fc0"),
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 2, DateTimeKind.Local).AddTicks(370),
                            IdDocente = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fc0"),
                            Nome = "Física"
                        });
                });

            modelBuilder.Entity("Edu_Station.Models.Docente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docentes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            CPF = "03223652566",
                            DataNascimento = new DateTime(1980, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jose@email.com",
                            NomeCompleto = "José da Silva Santos",
                            Perfil = 2,
                            Senha = "123",
                            Telefone = "86995522588"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fb8"),
                            CPF = "12345678910",
                            DataNascimento = new DateTime(1975, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "maria@email.com",
                            NomeCompleto = "Maria Oliveira",
                            Perfil = 2,
                            Senha = "456",
                            Telefone = "86998877441"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fb9"),
                            CPF = "98765432100",
                            DataNascimento = new DateTime(1990, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joao@email.com",
                            NomeCompleto = "João Pereira",
                            Perfil = 2,
                            Senha = "789",
                            Telefone = "869977336699"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fba"),
                            CPF = "55544433322",
                            DataNascimento = new DateTime(1985, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ana@email.com",
                            NomeCompleto = "Ana Souza",
                            Perfil = 2,
                            Senha = "abc",
                            Telefone = "869911223344"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbb"),
                            CPF = "11223344556",
                            DataNascimento = new DateTime(1978, 7, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedro@email.com",
                            NomeCompleto = "Pedro Santos",
                            Perfil = 2,
                            Senha = "def",
                            Telefone = "869922334455"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbc"),
                            CPF = "99887766554",
                            DataNascimento = new DateTime(1982, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariana@email.com",
                            NomeCompleto = "Mariana Costa",
                            Perfil = 2,
                            Senha = "ghi",
                            Telefone = "869933445566"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbd"),
                            CPF = "77665544332",
                            DataNascimento = new DateTime(1970, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlos@email.com",
                            NomeCompleto = "Carlos Oliveira",
                            Perfil = 2,
                            Senha = "jkl",
                            Telefone = "869944556677"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbe"),
                            CPF = "33445566778",
                            DataNascimento = new DateTime(1995, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "aline@email.com",
                            NomeCompleto = "Aline Pereira",
                            Perfil = 2,
                            Senha = "mno",
                            Telefone = "869955667788"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fbf"),
                            CPF = "22334455667",
                            DataNascimento = new DateTime(1987, 6, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marcos@email.com",
                            NomeCompleto = "Marcos Silva",
                            Perfil = 2,
                            Senha = "pqr",
                            Telefone = "869966778899"
                        },
                        new
                        {
                            Id = new Guid("c8788f1e-ffb6-4d1f-9ad5-3f4bb5838fc0"),
                            CPF = "77889900123",
                            DataNascimento = new DateTime(1983, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "laura@email.com",
                            NomeCompleto = "Laura Santos",
                            Perfil = 2,
                            Senha = "stu",
                            Telefone = "869977889900"
                        });
                });

            modelBuilder.Entity("Edu_Station.Models.Login", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Perfil")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

            modelBuilder.Entity("Edu_Station.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            Ano = "2024",
                            DataCriacao = new DateTime(2024, 4, 11, 10, 28, 40, 3, DateTimeKind.Local).AddTicks(4288),
                            Nome = "1A"
                        });
                });

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.HasOne("Edu_Station.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu_Station.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DiscipinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocenteTurma", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu_Station.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Edu_Station.Models.Aluno", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany("Alunos")
                        .HasForeignKey("DocenteId");

                    b.HasOne("Edu_Station.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Edu_Station.Models.Disciplina", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany("Disciplinas")
                        .HasForeignKey("DocenteId");

                    b.HasOne("Edu_Station.Models.Docente", "Docente")
                        .WithMany()
                        .HasForeignKey("IdDocente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Edu_Station.Models.Docente", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("Edu_Station.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}

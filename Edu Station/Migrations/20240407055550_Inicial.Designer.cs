// <auto-generated />
using System;
using Edu_Station.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Edu_Station.Migrations
{
    [DbContext(typeof(BancoContext))]
    [Migration("20240407055550_Inicial")]
    partial class Inicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.Property<Guid>("AlunosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DiscipinasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AlunosId", "DiscipinasId");

                    b.HasIndex("DiscipinasId");

                    b.ToTable("AlunoDisciplina");
                });

            modelBuilder.Entity("DocenteTurma", b =>
                {
                    b.Property<Guid>("DocentesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TurmasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("DocentesId", "TurmasId");

                    b.HasIndex("TurmasId");

                    b.ToTable("DocenteTurma");
                });

            modelBuilder.Entity("Edu_Station.Models.Aluno", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DocenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdTurma")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.HasIndex("IdTurma");

                    b.ToTable("Alunos");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd923fe1-3e73-4dda-ae5c-c27588ab08db"),
                            CPF = "06445225447",
                            DataNascimento = new DateTime(1999, 4, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "josearimateia@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "José de Arimateia",
                            Telefone = "86995258775"
                        },
                        new
                        {
                            Id = new Guid("e3f72cbf-35ed-4f7e-8476-72ba3c3cc5e3"),
                            CPF = "12345678901",
                            DataNascimento = new DateTime(2000, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "mariasilva@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Maria da Silva",
                            Telefone = "86991234567"
                        },
                        new
                        {
                            Id = new Guid("963c7e5d-2f0e-45ec-8d4e-1216f62627d7"),
                            CPF = "98765432109",
                            DataNascimento = new DateTime(1998, 10, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "joaosilva@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "João da Silva",
                            Telefone = "86997654321"
                        },
                        new
                        {
                            Id = new Guid("a3c750e3-3d79-4d3e-923e-2fcd52794c0c"),
                            CPF = "45678912345",
                            DataNascimento = new DateTime(2001, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "anasouza@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Ana Souza",
                            Telefone = "86999887766"
                        },
                        new
                        {
                            Id = new Guid("e5b01b44-32b8-4c5d-8090-23c2d0a0c6cb"),
                            CPF = "98765432198",
                            DataNascimento = new DateTime(2002, 5, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "pedrooliveira@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Pedro Oliveira",
                            Telefone = "86994433221"
                        },
                        new
                        {
                            Id = new Guid("94d7934e-3462-4b97-91c7-6a7d16d456ad"),
                            CPF = "01234567890",
                            DataNascimento = new DateTime(2003, 8, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "carlasantos@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Carla Santos",
                            Telefone = "86995544333"
                        },
                        new
                        {
                            Id = new Guid("fb03391d-6223-4a4c-87f6-ec131dbbd99d"),
                            CPF = "10293847560",
                            DataNascimento = new DateTime(2004, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "marianaoliveira@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Mariana Oliveira",
                            Telefone = "86993322111"
                        },
                        new
                        {
                            Id = new Guid("f12bc8d1-4e2b-4b7d-af42-b858bb362cf9"),
                            CPF = "09876543210",
                            DataNascimento = new DateTime(2005, 2, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "fernandolima@mail.com",
                            IdTurma = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            NomeCompleto = "Fernando Lima",
                            Telefone = "86996655443"
                        });
                });

            modelBuilder.Entity("Edu_Station.Models.Disciplina", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocenteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdDocente")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DocenteId");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("Edu_Station.Models.Docente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Docentes");
                });

            modelBuilder.Entity("Edu_Station.Models.Turma", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Turmas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c8788f6e-ffb6-4d1f-9ad5-3f4bb5838fb7"),
                            Ano = "2024",
                            DataCriacao = new DateTime(2024, 4, 7, 2, 55, 49, 873, DateTimeKind.Local).AddTicks(5686),
                            Nome = "1A"
                        });
                });

            modelBuilder.Entity("AlunoDisciplina", b =>
                {
                    b.HasOne("Edu_Station.Models.Aluno", null)
                        .WithMany()
                        .HasForeignKey("AlunosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu_Station.Models.Disciplina", null)
                        .WithMany()
                        .HasForeignKey("DiscipinasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DocenteTurma", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany()
                        .HasForeignKey("DocentesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Edu_Station.Models.Turma", null)
                        .WithMany()
                        .HasForeignKey("TurmasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Edu_Station.Models.Aluno", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", null)
                        .WithMany("Alunos")
                        .HasForeignKey("DocenteId");

                    b.HasOne("Edu_Station.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("IdTurma")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("Edu_Station.Models.Disciplina", b =>
                {
                    b.HasOne("Edu_Station.Models.Docente", "Docente")
                        .WithMany("Disciplinas")
                        .HasForeignKey("DocenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Docente");
                });

            modelBuilder.Entity("Edu_Station.Models.Docente", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Disciplinas");
                });

            modelBuilder.Entity("Edu_Station.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
